reinterpret_cast<T>(e)
reinterpret_cast is the most dangerous cast. 
It turns one type directly into another - such as casting the value from one pointer to another, 
or storing a pointer in an int, or all sorts of other nasty things. Largely, 
the only guarantee you get with reinterpret_cast is that if you cast the result back to the original type, 
you will get the exact same value. There are a number of conversions that reinterpret_cast cannot do, too. 
It's used primarily for particularly weird conversions and bit manipulations, like turning a raw data 
stream into actual data, or storing data in the low bits of an aligned pointer.